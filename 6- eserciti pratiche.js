   
/* Создайте функцию, которая будет вычислять объем и площадь полной поверхности куба (тоже базовая математика, 
иногда используется в создании анимаций). Эта функция принимает в себя целое число со значением длины ребра куба.
 Ответ выведите в формате строки, который изображен в примерах.
 Если в функцию попал неправильный аргумент или вычислить значения невозможно - вернуть строку "При вычислении произошла ошибка"
  НЕ ИСПОЛЬЗУЙТЕ ОПЕРАТОР СТЕПЕНИ ** - в онлайн среде браузера он не работает и тесты будут ломаться.
   Это из-за того, что этот оператор из более нового стандарта, чем тут доступен.
 
 Примеры:
  calculateVolumeAndArea(5)  => 'Объем куба: 125, площадь всей поверхности: 150'
  calculateVolumeAndArea(15)  => 'Объем куба: 3375, площадь всей поверхности: 1350'
  calculateVolumeAndArea(15.5)  => 'При вычислении произошла ошибка'
  calculateVolumeAndArea('15')  => 'При вычислении произошла ошибка'
  calculateVolumeAndArea(-15)  => 'При вычислении произошла ошибка'
  */
 function nt (val){
   if(  typeof val != "number" || val <=0 || !Number.isInteger(val) ){
       return `error di inserimento dati`
    }

    let cubo = val*val*val
    let sup = 6*(val*val)
    return `dimensione del cubo e ${cubo}  e superfice e di ${sup}`
 }
 //console.log( nt(5))


//------------------------------------ 2 ----------------------------------------------------------
 /* 
Напишите функцию, которая будет определять номер купе по переданному ей номеру места. Наглядно:
Функция принимает только целое число от 1 до 36.
Если переданный аргумент не число, отрицательное или дробное - возвращается сообщение:
"Ошибка. Проверьте правильность введенного номера места"
Если число 0 или больше 36, то сообщение: "Таких мест в вагоне не существует"

Пример:
getCoupeNumber(33)  => 9
getCoupeNumber(7)  => 2
getCoupeNumber(300)  => "Таких мест в вагоне не существует"
getCoupeNumber(0)  => "Таких мест в вагоне не существует"
getCoupeNumber(7.7)  => "Ошибка. Проверьте правильность введенного номера места"
getCoupeNumber(-10)  => "Ошибка. Проверьте правильность введенного номера места"
getCoupeNumber('Hello')  => "Ошибка. Проверьте правильность введенного номера места"
*/

function getCoupeNumber (valo){
    if( typeof valo != "number" || !Number.isInteger(valo)){
        return `E stato un errore di inserimento`
    }

    if (valo <= 0 || valo > 36){
        return `Non esiste un posto con questo numero `
    }
    return  Math.ceil(valo/4)

}

 //  console.log(getCoupeNumber(14) ) 




//-------------------------- 3 -----------------------------------------
/*
Напишите функцию, которая принимает в себя 4 числа и возвращает самое большее из них. 
Если один из аргументов не является числом или их меньше 4 - возвращается 0. 
Дробные числа разрешены.
Пример:
findMaxNumber(1, 5, 6.6, 11); =>  11
findMaxNumber(1, 5, '6', '10');  =>  0
*/
function maxNum (a,b,c,d){
    if(typeof a !== "number"||
       typeof b !== "number"||
       typeof c !== "number"||
       typeof d !== "number" ) {
         return 0
     }else{
        return Math.max(a,b,c,d)
     }
}
//  console.log( maxNum(10,0,5,8))



//-------------------------------- 4 --------------------------------------------------------
/*
Создайте функцию, которая принимает в себя целое число минут и возвращает время в нужном формате строки
 (Смотри пример). Обратите внимание на окончание слова "час" - оно меняется в зависимости от цифры. 
 Если вместо аргумента приходит не число, дробное или отрицательное число - функция возвращает строку "Ошибка, проверьте данные"
Внимание! Давайте пока ограничимся максимум 600ю минутами (10 часов).
 Так как проверки на большие числа будут раздувать код (33 часа, 31 час, 11 часов и тд).
  Этого будет достаточно и код будет проверять именно этот промежуток (1 - 10 часов). 
  Но вы можете реализовать и полный скрипт, он тоже должен проходить тесты.
Пример:
getTimeFromMinutes(150) => "Это 2 часа и 30 минут"
getTimeFromMinutes(50) => "Это 0 часов и 50 минут"
getTimeFromMinutes(0) => "Это 0 часов и 0 минут"
getTimeFromMinutes(-150) => "Ошибка, проверьте данные"
*/
function convertOre(min){
    if ( typeof min !== "number" || min < 0 || !Number.isInteger(min) ){
        return " e stato commesso un errore"
    }

    const hour = Math.floor(min / 60) ; //arrotonda al intero minim
    const minut = min % 60;             // divide il resto


    let nomeOre =""     //con switch scelgo come chiamare le ore
    switch(hour){
        case 1: nomeOre = "ceas"; break

        case 2:
        case 3: 
        case 4: nomeOre = "cesa"; break

        default: nomeOre = "cesov"
    }
      

    return ` sara ${hour} ${nomeOre} e ${minut} minuti`
}

 //console.log(convertOre(300))


